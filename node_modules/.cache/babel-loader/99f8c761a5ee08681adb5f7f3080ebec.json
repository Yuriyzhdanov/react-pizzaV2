{"ast":null,"code":"var _jsxFileName = \"/Users/yuriizhdanov/Downloads/myProject/react-pizzaV2/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport qs from 'qs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Pagination } from '../components';\nimport Categories from '../components/Categories';\nimport Sort, { sortList } from \"../components/Sort\";\nimport Skeleton from \"../components/PizzaBlock/Skeleton\";\nimport PizzaBlock from \"../components/PizzaBlock/PizzaBlock\";\nimport { selectFilter } from '../redux/slices/selector';\nimport { setCategoryId, setCurrentPage, setFilters } from '../redux/slices/filterSlice';\nimport SearchContext from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(selectFilter);\n  const {\n    searchValue\n  } = React.useContext(SearchContext);\n  const [items, setItems] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const onChangeCategory = React.useCallback(idx => {\n    dispatch(setCategoryId(idx));\n  }, []);\n\n  const onChangePage = page => {\n    dispatch(setCurrentPage(page));\n  };\n\n  const fetchPizzas = () => {\n    setIsLoading(true);\n    const sortBy = sort.sortProperty.replace('-', '');\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const search = searchValue ? `search=${searchValue}` : '';\n    axios.get(`https://626d16545267c14d5677d9c2.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}&${search}`).then(res => {\n      setItems(res.data);\n      setIsLoading(false);\n    });\n  }; // Если изменили параметры и был первый рендер\n\n\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, currentPage]); // Если был первый рендер, то проверяем URl-параметры и сохраняем в редуксе\n\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = sortList.find(obj => obj.sortProperty === params.sortProperty);\n      dispatch(setFilters({ ...params,\n        sort\n      }));\n      isSearch.current = true;\n    }\n  }, []); // Если был первый рендер, то запрашиваем пиццы\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n\n    if (!isSearch.current) {\n      fetchPizzas();\n    }\n\n    isSearch.current = false;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, { ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 38\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 58\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onChangeCategory: onChangeCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        value: sort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Home, \"l+nYI5dyCUcGt5nNDh++DOOgGfs=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","qs","useSelector","useDispatch","useNavigate","axios","Pagination","Categories","Sort","sortList","Skeleton","PizzaBlock","selectFilter","setCategoryId","setCurrentPage","setFilters","SearchContext","Home","navigate","dispatch","isSearch","useRef","isMounted","categoryId","sort","currentPage","searchValue","useContext","items","setItems","useState","isLoading","setIsLoading","onChangeCategory","useCallback","idx","onChangePage","page","fetchPizzas","sortBy","sortProperty","replace","order","includes","category","search","get","then","res","data","useEffect","current","queryString","stringify","window","location","params","parse","substring","find","obj","scrollTo","pizzas","map","id","skeletons","Array","_","index"],"sources":["/Users/yuriizhdanov/Downloads/myProject/react-pizzaV2/src/pages/Home.jsx"],"sourcesContent":["import React from 'react';\nimport qs from 'qs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nimport {Pagination } from '../components';\nimport Categories from '../components/Categories';\nimport Sort, { sortList } from \"../components/Sort\";\nimport Skeleton from \"../components/PizzaBlock/Skeleton\";\nimport PizzaBlock from \"../components/PizzaBlock/PizzaBlock\";\nimport { selectFilter } from '../redux/slices/selector';\nimport { setCategoryId, setCurrentPage, setFilters } from '../redux/slices/filterSlice';\nimport  SearchContext  from '../App';\n\n\nexport const Home = () => {\n   const navigate = useNavigate();\n   const dispatch = useDispatch();\n   const isSearch = React.useRef(false);\n   const isMounted = React.useRef(false);\n\n   const { categoryId, sort, currentPage } = useSelector(selectFilter);\n\n   const { searchValue } = React.useContext(SearchContext);\n   const [items, setItems] = React.useState([]);\n   const [isLoading, setIsLoading] = React.useState(true);\n\n   const onChangeCategory = React.useCallback((idx) => {\n      dispatch(setCategoryId(idx));\n   }, []);\n\n   const onChangePage = (page) => {\n      dispatch(setCurrentPage(page));\n   };\n\n   const fetchPizzas = () => {\n      setIsLoading(true);\n\n      const sortBy = sort.sortProperty.replace('-', '');\n      const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n      const category = categoryId > 0 ? `category=${categoryId}` : '';\n      const search = searchValue ? `search=${searchValue}` : '';\n\n      axios\n         .get(\n            `https://626d16545267c14d5677d9c2.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}&${search}`,\n         )\n         .then((res) => {\n            setItems(res.data);\n            setIsLoading(false);\n         });\n   };\n\n   // Если изменили параметры и был первый рендер\n   React.useEffect(() => {\n      if (isMounted.current) {\n         const queryString = qs.stringify({\n            sortProperty: sort.sortProperty,\n            categoryId,\n            currentPage,\n         });\n\n         navigate(`?${queryString}`);\n      }\n      isMounted.current = true;\n   }, [categoryId, sort.sortProperty, currentPage]);\n\n   // Если был первый рендер, то проверяем URl-параметры и сохраняем в редуксе\n   React.useEffect(() => {\n      if (window.location.search) {\n         const params = qs.parse(window.location.search.substring(1));\n\n         const sort = sortList.find((obj) => obj.sortProperty === params.sortProperty);\n\n         dispatch(\n            setFilters({\n               ...params,\n               sort,\n            }),\n         );\n         isSearch.current = true;\n      }\n   }, []);\n\n   // Если был первый рендер, то запрашиваем пиццы\n   React.useEffect(() => {\n      window.scrollTo(0, 0);\n\n      if (!isSearch.current) {\n         fetchPizzas();\n      }\n\n      isSearch.current = false;\n   }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n   const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />);\n\n   const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />);\n\n   return (\n      <div className=\"container\">\n         <div className=\"content__top\">\n            <Categories value={categoryId} onChangeCategory={onChangeCategory} />\n            <Sort value={sort} />\n         </div>\n         <h2 className=\"content__title\">Все пиццы</h2>\n         <div className=\"content__items\">{isLoading ? skeletons : pizzas}</div>\n         <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n      </div>\n   );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}